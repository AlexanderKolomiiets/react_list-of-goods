{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlph","ALPABET","sortByLength","LENGTH","reset","this","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","getReorderedGoods","className","type","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,WAAa,WACX,EAAKD,SAAS,CAAEH,SAAUL,EAASU,WAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,MAAQ,WACN,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KArBzD,4CAwBE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdU,EA1DH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAML,EAASU,QACb,OAAOQ,EAAME,cAAcD,GAE7B,KAAMnB,EAASY,OACb,OAAOM,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITjB,GACFY,EAAaT,UAGRS,EAmCSM,CAAkBrB,EAAiB,CAAEI,WAAUD,eAE7D,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPT,KAAKX,MAAME,WAAaL,EAASU,QAC7B,WACA,IACNe,QAASX,KAAKL,WANhB,iCAWA,wBACEe,KAAK,SACLD,UAAS,4BACPT,KAAKX,MAAME,WAAaL,EAASY,OAC7B,WACA,IACNa,QAASX,KAAKH,aANhB,4BAWA,wBACEa,KAAK,SACLD,UAAS,6BACQ,IAAfnB,EACI,WACA,IACNqB,QAASX,KAAKP,QANhB,sBAWEO,KAAKX,MAAME,WAAaL,EAASM,OAAuB,IAAfF,IAEzC,wBACEoB,KAAK,SACLD,UAAU,4BACVE,QAASX,KAAKD,MAHhB,sBAUJ,6BACE,6BACGE,EAAMW,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,kBAjFjB,GAAyBC,aCxDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.26eaf6fb.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case (SortType.ALPABET):\n        return goodA.localeCompare(goodB);\n\n      case (SortType.LENGTH):\n        return goodA.length - goodB.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlph = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${\n              this.state.sortType !== SortType.ALPABET\n                ? 'is-light'\n                : ''}`}\n            onClick={this.sortByAlph}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${\n              this.state.sortType !== SortType.LENGTH\n                ? 'is-light'\n                : ''}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${\n              isReversed === false\n                ? 'is-light'\n                : ''}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || isReversed !== false)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => (\n              <li data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}